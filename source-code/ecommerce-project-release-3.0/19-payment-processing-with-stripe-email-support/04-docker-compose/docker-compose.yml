#This is base docker-compose file it will be overridden by other compose files.
#Run dev/test/prod as instructed in the file with the appropriate .env.dev/test/prod file

version: '3.8'

services:
  backend:
    build:
      context: ../02-backend/spring-boot-ecommerce  # Path to the backend directory
      dockerfile: Dockerfile  # If the Dockerfile is named differently, specify the correct name
    image: localhost/spring-boot-ecommerce:latest   # This will tag the built image
    container_name: spring-boot-ecommerce
    ports:
      - "8080:8080"   # Expose backend port to the host
      - "8443:8443"   # Expose secure backend port to the host (if needed)
    environment:
      - DB_URL=${DB_URL}   # Pass environment variables, or set defaults in .env file
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-dev}
    networks:
      - ecommerce-network

  frontend:
    build:
      context: ../03-frontend/angular-ecommerce  # Path to the frontend directory
      dockerfile: Dockerfile  # If the Dockerfile is named differently, specify the correct name
    image: localhost/angular-ecommerce:latest   # This will tag the built image
    container_name: angular-ecommerce
    ports:
      - "4200:4200"   # Expose frontend port to the host
    networks:
      - ecommerce-network
    depends_on:
      - backend   # Ensure backend is ready before starting the frontend


networks:
  ecommerce-network:
    driver: bridge


